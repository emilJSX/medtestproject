"use strict";(()=>{var e={};e.id=715,e.ids=[715],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6810:(e,r,t)=>{t.r(r),t.d(r,{config:()=>u,default:()=>n,routeModule:()=>l});var a={};t.r(a),t.d(a,{default:()=>handler});var d=t(1802),s=t(7153),o=t(6249),i=t(1693);async function handler(e,r){let{id:t}=e.query;if("POST"!==e.method)return r.setHeader("Allow",["POST"]),r.status(405).end(`Method ${e.method} Not Allowed`);try{let e=Number(t),a=await i._.order.findUnique({where:{id:e}});if(!a)return r.status(404).json({error:"Order not found"});if("ACCEPTED"===a.status)return r.status(400).json({error:"Order already accepted"});let d=await i._.order.update({where:{id:e},data:{status:"ACCEPTED"}});return r.status(200).json(d)}catch(e){return console.error(e),r.status(500).json({error:"Server error"})}}let n=(0,o.l)(a,"default"),u=(0,o.l)(a,"config"),l=new d.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/orders/[id]/accept",pathname:"/api/orders/[id]/accept",bundlePath:"",filename:""},userland:a})},1693:(e,r,t)=>{t.d(r,{_:()=>d});let a=require("@prisma/client"),d=global.prisma??new a.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[222],()=>__webpack_exec__(6810));module.exports=t})();