"use strict";(()=>{var e={};e.id=722,e.ids=[722],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3455:(e,r,t)=>{t.r(r),t.d(r,{config:()=>l,default:()=>i,routeModule:()=>u});var a={};t.r(a),t.d(a,{default:()=>handler});var d=t(1802),o=t(7153),s=t(6249),n=t(1693);async function handler(e,r){try{if("GET"===e.method){let e=await n._.order.findMany({orderBy:{createdAt:"desc"}});return r.status(200).json(e)}if("POST"===e.method){let{name:t,address:a,description:d,price:o}=e.body;if(!t||!a||null==o)return r.status(400).json({error:"name, address and price are required"});let s=await n._.order.create({data:{name:t,address:a,description:d,price:Number(o)}});return r.status(201).json(s)}return r.setHeader("Allow",["GET","POST"]),r.status(405).end(`Method ${e.method} Not Allowed`)}catch(e){return console.error(e),r.status(500).json({error:"Server error"})}}let i=(0,s.l)(a,"default"),l=(0,s.l)(a,"config"),u=new d.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/orders",pathname:"/api/orders",bundlePath:"",filename:""},userland:a})},1693:(e,r,t)=>{t.d(r,{_:()=>d});let a=require("@prisma/client"),d=global.prisma??new a.PrismaClient({log:["query"]})}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[222],()=>__webpack_exec__(3455));module.exports=t})();